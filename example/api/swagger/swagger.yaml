definitions:
  api.Author:
    properties:
      contact:
        description: "Types that are assignable to Contact:\n\n\t*Author_Email\n\t*Author_Phone"
      name:
        description: Name
        type: string
    type: object
  api.EchoRequest:
    properties:
      channel:
        description: Channel
        type: string
      message:
        description: Message
        type: string
    type: object
  api.GetMessageResponse:
    properties:
      message:
        allOf:
        - $ref: '#/definitions/api.Message'
        description: Message
    type: object
  api.ListMessagesResponse:
    properties:
      messages:
        description: List of messages
        items:
          $ref: '#/definitions/api.Message'
        type: array
    type: object
  api.Message:
    properties:
      author:
        allOf:
        - $ref: '#/definitions/api.Author'
        description: Author
      id:
        description: Message ID
        type: integer
      message:
        description: Message
        type: string
      status:
        allOf:
        - $ref: '#/definitions/api.Status'
        description: Status
    type: object
  api.PatchMessageRequest:
    properties:
      message:
        allOf:
        - $ref: '#/definitions/api.Message'
        description: Message
    type: object
  api.PostMessageRequest:
    properties:
      author:
        allOf:
        - $ref: '#/definitions/api.Author'
        description: Author
      message:
        description: Message
        type: string
      status:
        allOf:
        - $ref: '#/definitions/api.Status'
        description: Status
    type: object
  api.PostMessageResponse:
    properties:
      message:
        allOf:
        - $ref: '#/definitions/api.Message'
        description: Message
    type: object
  api.PutMessageRequest:
    properties:
      message:
        allOf:
        - $ref: '#/definitions/api.Message'
        description: Message
    type: object
  api.Status:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Status_STATUS_UNSPECIFIED
    - Status_STATUS_DRAFT
    - Status_STATUS_PUBLISHED
  emptypb.Empty:
    type: object
info:
  contact: {}
  title: Swagger API (api)
  version: "20250320"
paths:
  /api/v1/blackhole:
    post:
      consumes:
      - application/json
      parameters:
      - description: body of the request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.EchoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
      tags:
      - EchoService
  /api/v1/example/messages:
    get:
      parameters:
      - description: Number of items per page
        in: query
        name: per_page
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - collectionFormat: csv
        description: List of message IDs
        in: query
        items:
          type: integer
        name: ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ListMessagesResponse'
      security:
      - AuthExampleService: []
      summary: LIST messages from the server.
      tags:
      - ExampleService
    post:
      consumes:
      - application/json
      parameters:
      - description: body of the request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.PostMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.PostMessageResponse'
      security:
      - AuthExampleService: []
      summary: POST new message to the server.
      tags:
      - ExampleService
  /api/v1/example/messages/{id}:
    delete:
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - AuthExampleService: []
      summary: DELETE message from the server.
      tags:
      - ExampleService
    get:
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.GetMessageResponse'
      security:
      - AuthExampleService: []
      summary: GET message from the server.
      tags:
      - ExampleService
  /api/v1/example/messages/{message.id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: body of the request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.PatchMessageRequest'
      - description: Message ID
        in: path
        name: message.id
        required: true
        type: integer
      responses: {}
      security:
      - AuthExampleService: []
      summary: PATCH message to the server.
      tags:
      - ExampleService
    put:
      consumes:
      - application/json
      parameters:
      - description: body of the request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.PutMessageRequest'
      - description: Message ID
        in: path
        name: message.id
        required: true
        type: integer
      responses: {}
      security:
      - AuthExampleService: []
      summary: PUT message to the server.
      tags:
      - ExampleService
securityDefinitions:
  AuthExampleService:
    description: Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- name: EchoService
- name: ExampleService
