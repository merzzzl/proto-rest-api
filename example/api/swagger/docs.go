// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/blackhole": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EchoService"
                ],
                "parameters": [
                    {
                        "description": "body of the request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.EchoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    }
                }
            }
        },
        "/api/v1/example/messages": {
            "get": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "LIST messages from the server.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "List of message IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListMessagesResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "POST new message to the server.",
                "parameters": [
                    {
                        "description": "body of the request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PostMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PostMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/example/messages/{id}": {
            "get": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "GET message from the server.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GetMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "DELETE message from the server.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/example/messages/{message.id}": {
            "put": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "PUT message to the server.",
                "parameters": [
                    {
                        "description": "body of the request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PutMessageRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "message.id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "AuthExampleService": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ExampleService"
                ],
                "summary": "PATCH message to the server.",
                "parameters": [
                    {
                        "description": "body of the request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PatchMessageRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "message.id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.Author": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "Types that are assignable to Contact:\n\n\t*Author_Email\n\t*Author_Phone"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                }
            }
        },
        "api.EchoRequest": {
            "type": "object",
            "properties": {
                "channel": {
                    "description": "Channel",
                    "type": "string"
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                }
            }
        },
        "api.GetMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Message"
                        }
                    ]
                }
            }
        },
        "api.ListMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "List of messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                }
            }
        },
        "api.Message": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Author"
                        }
                    ]
                },
                "id": {
                    "description": "Message ID",
                    "type": "integer"
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Status"
                        }
                    ]
                }
            }
        },
        "api.PatchMessageRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Message"
                        }
                    ]
                }
            }
        },
        "api.PostMessageRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Author"
                        }
                    ]
                },
                "message": {
                    "description": "Message",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Status"
                        }
                    ]
                }
            }
        },
        "api.PostMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Message"
                        }
                    ]
                }
            }
        },
        "api.PutMessageRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Message"
                        }
                    ]
                }
            }
        },
        "api.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Status_STATUS_UNSPECIFIED",
                "Status_STATUS_DRAFT",
                "Status_STATUS_PUBLISHED"
            ]
        },
        "emptypb.Empty": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "AuthExampleService": {
            "description": "Bearer token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "EchoService"
        },
        {
            "name": "ExampleService"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "20250320",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger API (api)",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
